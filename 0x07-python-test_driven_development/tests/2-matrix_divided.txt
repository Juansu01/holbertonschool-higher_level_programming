Testing ```matrix_divided``` function.
    
Importing function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Testing with expected input:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1)
    [[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

    >>> matrix_divided([[10, 5, 6], [7, 8, 15]], 4)
    [[2.5, 1.25, 1.5], [1.75, 2.0, 3.75]]

Testing with unexpected data types:

    >>> matrix_divided("holberton", 4)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Hello")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Testing with no arguments and none argument

    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided(None)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
